<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
    <session-factory>
        <!-- 基本信息 -->
        <property name="connection.driver_class">com.mysql.cj.jdbc.Driver</property>
        <property name="connection.url">jdbc:mysql://localhost:3306/hibernate?serverTimezone=UTC</property>
        <property name="connection.username">root</property>
        <property name="connection.password">root</property>

        <!-- JDBC connection pool (use the built-in) -->
        <property name="connection.pool_size">1</property>

        <!-- SQL dialect 用的哪一个数据库 -->
        <!--<property name="dialect">org.hibernate.dialect.MySQLInnoDBDialect</property>-->
        <property name="dialect">org.hibernate.dialect.MySQL8Dialect</property>
        <property name="dialect.storage_engine">innodb</property>

        <!-- Disable the second-level cache  -->
<!--        <property name="cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</property>-->

        <!-- 是否在控制台打印 SQL -->
        <property name="show_sql">true</property>
        <!-- 是否对 SQL 进行格式化 -->
        <property name="format_sql">true</property>
        <!-- 指定生成表的策略 取值 create | update | create-drop | validate -->
        <!-- create：每次都会删除之前的表，新建表 -->
        <!-- update：如果表不存在会新建，并插入数据，如果存在，则追加数据 -->
        <!-- create-drop：每次创建表后再删除 -->
        <!-- validate：校验xml配置和数据表的列是否一致 -->
        <property name="hbm2ddl.auto">update</property>

        <!-- 设置数据库的隔离级别 -->
        <property name="connection.isolation">2</property>

        <!-- 配置 C3P0 数据源 -->
        <property name="hibernate.c3p0.max_size">10</property>
        <property name="hibernate.c3p0.min_size">5</property>
        <property name="c3p0.acquire_increment">2</property>

        <property name="c3p0.idle_test_period">2000</property>
        <property name="c3p0.timeout">2000</property>

        <property name="c3p0.max_statements">10</property>

        <!-- 设定 JDBC 的 Statement 读取数据的时候每次从数据库中取出的记录条数 -->
        <property name="hibernate.jdbc.fetch_size">100</property>

        <!-- 设定对数据库进行批量删除，批量更新和批量插入的时候的批次大小 -->
        <property name="jdbc.batch_size">30</property>

        <!-- I.   配置启用 hibernate 的二级缓存-->
        <property name="cache.use_second_level_cache">true</property>

        <!--  II.  配置hibernate二级缓存使用的工厂类-->
        <property name="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</property>

        <!-- 配置启用查询缓存 -->
        <property name="cache.use_query_cache">true</property>

        <!-- 指定 hbm.xml 文件位置 -->
        <mapping resource="ehcache/hbm/Employee.hbm.xml"/>
        <mapping resource="ehcache/hbm/Department.hbm.xml"/>

        <!-- III. 配置对哪些类使用 hibernate 的二级缓存-->
        <class-cache usage="read-write" class="suncodes.ehcache.dao.Employee"/>
        <collection-cache usage="read-write" collection="suncodes.ehcache.dao.Department.emps"/>
        <class-cache usage="read-write" class="suncodes.ehcache.dao.Department"/>
        <!--
        实际上也可以在 .hbm.xml 文件中配置对哪些类使用二级缓存, 及二级缓存的策略是什么.
        <cache usage="read-write"/>
        两者选其一
        -->

    </session-factory>
</hibernate-configuration>